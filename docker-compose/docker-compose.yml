version: '3.4'

services:
  front-service:
    image: node:lts-alpine3.19
    command: sh -c "npm ci --only=production --legacy-peer-deps && npm run start:prod"
    container_name: front-service
    restart: always
    working_dir: /app
    volumes:
      - ~/work/front-service:/app
    ports:
      - "3001:3000"
    env_file:
      - ~/work/api-gateway/.env
    networks:
      - microservice-network

  api-gateway:
    image: node:lts-alpine3.19
    command: sh -c "npm ci --only=production --legacy-peer-deps && npm run start:prod"
    container_name: api-gateway
    restart: always
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ~/work/api-gateway:/app
    env_file:
      - ~/work/api-gateway/.env
    networks:
      - microservice-network

  api-gateway-documentation:
    image: node:lts-alpine3.19
    container_name: api-gateway-documentation
    restart: always
    ports:
      - "4000:8080"
    command: sh -c "npm install -g @compodoc/compodoc && compodoc -s"
    working_dir: /doc
    volumes:
      - ~/work/api-gateway-doc/documentation:/doc/documentation
    networks:
      - microservice-network

  users-service:
    image: node:lts-alpine3.19
    command: sh -c "npm ci --only=production --legacy-peer-deps && npm run start:prod"
    container_name: users-service
    restart: always
    working_dir: /app
    volumes:
      - ~/work/users-service:/app
    networks:
      - microservice-network
    links:
      - mysql_users_db
    env_file:
      - ~/work/users-service/.env

  mysql_users_db:
    image: mysql:8.0
    container_name: mysql_users_db
    restart: on-failure
    ports:
      - "3308:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=users_db
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=secret
      - MYSQL_TCP_PORT=3307
    volumes:
      - mysql_users_db:/var/lib/mysql
    networks:
      - microservice-network

  users-service-documentation:
    image: node:lts-alpine3.19
    container_name: users-service-documentation
    restart: always
    ports:
      - "4001:8080"
    command: sh -c "npm install -g @compodoc/compodoc && compodoc -s"
    working_dir: /doc
    volumes:
      - ~/work/users-service-doc/documentation:/doc/documentation
    networks:
      - microservice-network

  payments-service:
    image: node:lts-alpine3.19
    command: sh -c "npm ci --only=production --legacy-peer-deps && npm run start:prod"
    container_name: payments-service
    restart: always
    working_dir: /app
    volumes:
      - ~/work/payments-service:/app
    networks:
      - microservice-network
    links:
      - mysql_payments_db
    env_file:
      - ~/work/users-service/.env

  mysql_payments_db:
    image: mysql:8.0
    container_name: mysql_payments_db
    restart: on-failure
    ports:
      - "3309:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=payments_db
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=secret
      - MYSQL_TCP_PORT=3307
    volumes:
      - mysql_payments_db:/var/lib/mysql
    networks:
      - microservice-network

  payments-service-documentation:
    image: node:lts-alpine3.19
    container_name: payments-service-documentation
    restart: always
    ports:
      - "4002:8080"
    command: sh -c "npm install -g @compodoc/compodoc && compodoc -s"
    working_dir: /doc
    volumes:
      - ~/work/payments-service-doc/documentation:/doc/documentation
    networks:
      - microservice-network

  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"
    networks:
      - microservice-network

volumes:
  mysql_users_db:
    driver: local
  mysql_payments_db:
    driver: local

networks:
  microservice-network:
    external: true